name: üß© CI - Smoke Test

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  smoke-test:
    name: üî• Smoke Test (uv + Flask)
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout the repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Set up Python (choose your version)
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      # 3Ô∏è‚É£ Install uv package manager
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      # 4Ô∏è‚É£ Cache uv dependencies for speed
      - name: Cache uv
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            uv-${{ runner.os }}-

      # 5Ô∏è‚É£ Install project dependencies
      - name: Install dependencies
        run: |
          uv sync --frozen --all-extras

      # 6Ô∏è‚É£ Run lint and format checks
      - name: Run lint (Ruff style check)
        run: uv run ruff check src

      - name: Run import sort check
        run: uv run isort --check-only src

      # 7Ô∏è‚É£ Run smoke test (does app start?)
      - name: Run Flask smoke test
        env:
          FLASK_APP: nomad_nest:create_app
          FLASK_ENV: testing
          SECRET_KEY: test_key
        run: |
          uv run flask routes > /dev/null
          echo "‚úÖ Flask application factory imported successfully"

      # 8Ô∏è‚É£ Optional: Quick unit test discovery (no full coverage)
      - name: Run smoke pytest (no coverage)
        run: |
          uv run pytest -q --maxfail=1 --disable-warnings || echo "‚ö†Ô∏è No tests found or smoke test only"
